name: publish

on:
  push:
    tags:
      - "*" # This triggers on any tag push
  workflow_dispatch: # allow manual trigger

jobs:
  # Linux Build Job
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*" # This always installs the latest LTS

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libwebkit2gtk-4.0-dev libgtksourceview-4-dev libsoup2.4-dev libssl-dev libsqlite3-dev -y

      - name: Install Diesel CLI
        run: cargo install diesel_cli --no-default-features --features sqlite

      - name: Install npm dependencies
        run: npm install

      - name: Startup a Fresh DB (Linux)
        run: npm run db

      - name: Build Tauri App
        run: npm run app:build

      - name: Upload Linux Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tauri-linux-build
          path: ./src-tauri/target/release/bundle/ # Adjust this path to your Tauri Linux output folder

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*" # This always installs the latest LTS version

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Download SQLite Binary
        run: |
          curl -L https://www.sqlite.org/2024/sqlite-dll-win-x64-3460100.zip -o sqlite-dll-win-x64-3460100.zip
          unzip sqlite-dll-win-x64-3460100.zip

      - name: Setup MSVC tools
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build Sqlite lib
        run: |
          lib /DEF:sqlite3.def /OUT:sqlite3.lib /MACHINE:x64

      # - name: Set environment variables for SQLite3
      #   run: |
      #     set PATH="%cd%;%PATH%"
      #     set LIB="%cd%;%LIB%"

      - name: Install Diesel CLI
        run: cargo install diesel_cli --no-default-features --features sqlite

      - name: Install npm dependencies
        run: npm install

      - name: Build Tauri App (Windows)
        run: npm run app:build

      - name: Upload Windows Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tauri-windows-build
          path: ./src-tauri/target/release/bundle/ # Adjust this path to your Tauri Windows output folder
